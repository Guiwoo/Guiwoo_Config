[core]
	excludesfile = ~/.gitignore_global
	editor = vim
    autocrlf = false
    eol = lf
    pager = less -F -X
	hooksPath = ~/.git_template/hooks
[init]
	templatedir = ~/.git_template/hooks
	defaultBranch = main
[ui]
[url "git@gitlab.com:"]
    insteadOf = https://gitlab.com/
[color]
	ui = true
[pull]
  ff = only
[merge]
  conflicstyle = zdiff3
[rebase]
  autosquash = true
[diff]
  algorithm = histogram
[alias]
    # GitLog 관련 alias
    # Git Log를 그래프 형태로 15개 커밋만 출력
    lg = log --graph -15 --abbrev=7 --decorate --date=relative --format=format:'%C(bold red)%h%C(reset) -%C(bold yellow)%d%C(reset)%C(white)%w(110,1,2)%s%C(reset) %C(reset)%C(bold green)(%ar)%C(reset) %C(bold blue)<%an>%Creset' --all
    # Git Log를 그래프 형태로 30개 커밋만 출력
    lgc = log --graph -30 --abbrev=7 --decorate --date=relative --format=format:'%C(bold red)%h%C(reset) -%C(bold yellow)%d%C(reset)%C(white)%w(110,1,2)%s%C(reset) %C(reset)%C(bold green)(%ar)%C(reset) %C(bold blue)<%an>%Creset'
    # Git Log를 그래프 형태로 100개 커밋만 출력
    llg = log --graph -300 --abbrev=7 --decorate --date=relative --format=format:'%C(bold red)%h%C(reset) -%C(bold yellow)%d%C(reset)%C(white)%w(110,1,2)%s%C(reset) %C(reset)%C(bold green)(%ar)%C(reset) %C(bold blue)<%an>%Creset' --all
    # Git Log에서 그래프만 출력 -ㅁㅣ지 길이만 보여
    lgs = log --graph -15 --abbrev=7 --decorate --format=format:'%w(110,1,2)%s' --all
    lg1 = log --graph -15 --abbrev=7 --pretty=format:'%Cred%h%Creset -%C(bold yellow)%d%Creset %n%w(110,1,2)%s %C(bold green)(%cr) %C(bold blue)<%an>%Creset'
    lg2 = log --graph -15 --abbrev=7 --decorate --format=format:'%C(bold blue)%h%C(reset) -%C(reset)%C(bold yellow)%d %C(bold cyan)%aD%C(reset) %C(bold green)(%ar) %C(bold blue)<%an>%C(reset)%n''          %C(white)%n%w(110,1,2)%s%C(reset)%C(reset)' --all

    #GitDiff 관련 alias
    #변경된 파일 목록만 출력
    dl = diff --name-only
    dc = diff --cached

    #추적되지 않는 파일을 제외한 ㄹ현재 브런치 상태를 표시
    ss = status -uno

    # GitCommit
    ci = commit -a
    
    #GitLog를 비교하는 명령어
    list = log --cherry-pick --right-only --decorate --date=relative --format=format:'%C(bold red)%h%C(reset) -%C(bold yellow)%d%C(reset)%C(white)%w(110,1,2)%s%C(reset) %C(reset)%C(bold green)(%ar)%C(reset) %C(bold blue)<%an>%Creset'
    co = checkout
    clear = !git branch -d $1 && git remote prune origin
[help]
	autocorrect = 10
[oh-my-zsh]
	hide-dirty = 1
